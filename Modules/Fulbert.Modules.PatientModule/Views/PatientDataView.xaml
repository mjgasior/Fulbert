<mvvm:BaseView x:Class="Fulbert.Modules.PatientModule.Views.PatientDataView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:prism="http://www.codeplex.com/prism"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
               
    xmlns:lex="http://wpflocalizeextension.codeplex.com"
      lex:LocalizeDictionary.DesignCulture="pl-PL"
      lex:ResxLocalizationProvider.DefaultAssembly="Fulbert.Presentation.Localization"
      lex:ResxLocalizationProvider.DefaultDictionary="Labels"
              
    xmlns:interaction="clr-namespace:Fulbert.Infrastructure.Concrete.Interactions;assembly=Fulbert.Infrastructure"
    xmlns:behavior="clr-namespace:Fulbert.Infrastructure.Concrete.Behaviors;assembly=Fulbert.Infrastructure"
    xmlns:control="clr-namespace:Fulbert.Presentation.Controls.Extended;assembly=Fulbert.Presentation.Controls"
    xmlns:mvvm="clr-namespace:Fulbert.Infrastructure.Concrete.Mvvm;assembly=Fulbert.Infrastructure"           
    mc:Ignorable="d" d:DesignHeight="300" d:DesignWidth="300" x:Name="containerOfView">
    
    <i:Interaction.Triggers>
        <prism:InteractionRequestTrigger SourceObject="{Binding NotificationRequest, Mode=OneWay}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True" WindowStyle="{StaticResource windowInteractive}">
                <prism:PopupWindowAction.WindowContent>
                    <interaction:NotificationContent/>
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>
        <prism:InteractionRequestTrigger SourceObject="{Binding PatientAppointmentRequest, Mode=OneWay}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True" WindowStyle="{StaticResource windowInteractive}">
                <prism:PopupWindowAction.WindowContent>
                    <interaction:ConfirmationContent Style="{StaticResource patientAppointmentInteraction}"/>
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>
    </i:Interaction.Triggers>

    <ScrollViewer VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Disabled">
        <WrapPanel HorizontalAlignment="Center">
            <StackPanel Width="300" Margin="20,10,20,10">
                <Label Content="{lex:Loc PatientData}" Style="{StaticResource labelHeaderStyle}"/>

                <StackPanel DataContext="{Binding PatientModel}" Margin="0,0,0,10">
                    <control:HeaderTextBox Text="{Binding Path=FirstName, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}"
                                           MaxLength="20" Header="{lex:Loc FirstName}"/>

                    <control:HeaderTextBox Text="{Binding Path=LastName, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}"
                                           MaxLength="20" Header="{lex:Loc LastName}"/>

                    <control:HeaderTextBox Text="{Binding Path=Pesel, Mode=TwoWay, ValidatesOnDataErrors=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}"
                                           MaxLength="11" Header="{lex:Loc PeselNumber}">
                        <i:Interaction.Behaviors>
                            <behavior:OnlyNumericInputBehavior/>
                        </i:Interaction.Behaviors>
                    </control:HeaderTextBox>
                </StackPanel>

                <StackPanel DataContext="{Binding PatientModel}" Margin="0,0,0,10">
                    <StackPanel.Style>
                        <Style TargetType="{x:Type StackPanel}">
                            <Setter Property="Background" Value="{StaticResource APP_BRUSH_ALMOST_WHITE}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Age}" Value="0">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <Label Content="{Binding Age}" ContentStringFormat="{lex:Loc FormatAge}" />
                    <Label Content="{Binding Birthday}" ContentStringFormat="{lex:Loc FormatBirthday}" />
                    <Label Content="{Binding IsAWoman}" ContentStringFormat="{lex:Loc FormatGender}" />
                </StackPanel>

                <Button Command="{Binding SavePatientDataCommand}" Margin="10" Content="{lex:Loc SavePatientData}"/>
            </StackPanel>

            <StackPanel Width="300" Margin="20,10,20,10" Visibility="{Binding IsEditMode, Converter={StaticResource BoolToVisibleConverter}}">
                <Label Content="{lex:Loc PatientContactDetails}" Style="{StaticResource labelHeaderStyle}"/>

                <control:HeaderTextBox MaxLength="20" Header="{lex:Loc ContactCellPhone}"/>

                <control:HeaderTextBox MaxLength="20" Header="{lex:Loc ContactEmail}"/>

                <StackPanel DataContext="{Binding PatientModel}" Margin="0,0,0,10">
                    <StackPanel.Style>
                        <Style TargetType="{x:Type StackPanel}">
                            <Setter Property="Background" Value="{StaticResource APP_BRUSH_ALMOST_WHITE}"/>
                        </Style>
                    </StackPanel.Style>
                    <control:HeaderTextBox MaxLength="20" Header="{lex:Loc ContactStreet}"/>
                    <control:HeaderTextBox MaxLength="20" Header="{lex:Loc ContactZipCode}"/>
                    <control:HeaderTextBox MaxLength="20" Header="{lex:Loc ContactCity}"/>
                    <control:HeaderTextBox MaxLength="20" Header="{lex:Loc ContactState}"/>
                </StackPanel>
            </StackPanel>

            <StackPanel Width="300" Margin="20,10,20,10" Visibility="{Binding IsEditMode, Converter={StaticResource BoolToVisibleConverter}}">
                <Label Content="{lex:Loc PatientAppointments}" Style="{StaticResource labelHeaderStyle}"/>

                <TextBlock Visibility="{Binding PatientModel.Appointments.Count, Converter={StaticResource IntToVisibleConverter}, Mode=OneWay}" 
                           Style="{StaticResource textBlockMessage}" Text="{lex:Loc PatientNoAppointments}" Margin="0,10,0,10"/>

                <ItemsControl ItemsSource="{Binding PatientModel.Appointments}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Button Margin="10" Content="{Binding Date}" CommandParameter="{Binding}" Command="{Binding DataContext.EditAppointmentCommand, ElementName=containerOfView}"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

                <Button Command="{Binding AddAppointmentCommand}" Margin="10" Content="{lex:Loc AddAppointment}"/>
            </StackPanel>
        </WrapPanel>
    </ScrollViewer>

</mvvm:BaseView>